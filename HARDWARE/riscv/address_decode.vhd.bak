library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

library work;
use work.processor_common.all;

entity address_decoder_and_data_router is
    port (rs : in data_type;
          offset : in data_type;
          romdatain : in data_type;
          ramdatain : in data_type;
          iodatain : in data_type;
          memaccess : memaccess_type;
          dataout : out data_type;
          wrram : out std_logic;
          wrio : out std_logic;
          addressout : out data_type;
          waitfordata : out std_logic;
          addresserror : out std_logic
   );
end entity address_decoder_and_data_router;

architecture rtl of address_decoder_and_data_router is
signal address : data_type;
begin

    -- Address decoding and data routing for ROM, RAM and I/O to registers

    process (address, rs, offset, romdatain, ramdatain, iodatain, memaccess) is
    begin
        address <= std_logic_vector(unsigned(rs) + unsigned(offset));
        wrram <= '0';
        wrio <= '0';
        waitfordata <= '0';
        addresserror <= '0';
        -- ROM @ 0xxxxxxx, 256M space, read only
        if address(address'high downto address'high-3) = "0000" then
            dataout <= romdatain;
        -- I/O @ Fxxxxxxx, 256M space
        elsif address(address'high downto address'high-3) = "1111" then
            if memaccess = memaccess_write then
                wrio <='1';
            end if;
            dataout <= iodatain;
        -- RAM @ 2xxxxxxx, 256M space
        elsif address(address'high downto address'high-3) = "0010" then
            if memaccess = memaccess_write then
                wrram <='1';
            elsif memaccess = memaccess_read then
                waitfordata <= '1';
            end if;
            dataout <= ramdatain;
        else
            dataout <= (others => '-');
            -- Check for read/write in unspecified address region
            if memaccess = memaccess_write or memaccess = memaccess_read then
                addresserror <= '1';
            end if;
        end if;
        addressout <= address;
    end process;

end architecture rtl;